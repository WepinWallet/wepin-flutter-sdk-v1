# Name of this workspace, this is used for display purpose on the CLI
# and on your IDEs.
name: wepin_flutter_sdk
repository: https://github.com/WepinWallet/wepin-flutter-sdk-v1

# Array of globs to search for packages.
# Instead of one recursive glob, we use multiple globs to avoid
# searching every single directory in the repo.
packages:
  - packages/**
  - plugins/**

command:
  version:
    # Generate commit links in package changelogs.
    linkToCommits: true
    # Skip generation of shared changelogs file in the repo root
    workspaceChangelog: false

scripts:
  lint:all:
    run: melos run analyze && melos run format
    description: |
      Run all static analysis checks
      - Analyze the project for Dart analysis issues.
      - Requires `pub global activate tuneup`.

  analyze:
    run: |
      melos exec -c 5 -- \
        dart analyze . --fatal-infos
    description: |
      Run `dart analyze` in all packages.
       - Note: you can also rely on your IDEs Dart Analysis / Issues window.

  format:
    run: dart pub global run flutter_plugin_tools format
    description: |
      activate flutter_plugin_tools
       - Requires `flutter_plugin_tools` (`pub global activate flutter_plugin_tools`).
       - Requires `clang-format` (can be installed via Brew on macOS).

  publish:login:
    run: |
      melos publish --scope="wepin_flutter_login_lib" --yes --no-dry-run
    description: |
      Run `dart pub publish` in the `wepin_flutter_login_lib` package.

  publish:widget:
    run: |
      melos publish --scope="wepin_flutter_widget_sdk" --yes --no-dry-run
    description: |
      Run `dart pub publish` in the `wepin_flutter_widget_sdk` package.

  publish:pin:
    run: |
      melos publish --scope="wepin_flutter_pin_pad" --yes --no-dry-run
    description: |
      Run `dart pub publish` in the `wepin_flutter_pin_pad` package.